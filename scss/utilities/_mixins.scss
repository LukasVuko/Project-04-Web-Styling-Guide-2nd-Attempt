// -----------------------------------------------------------
// Mixins - Media Queries and Flexbox Settings
// -----------------------------------------------------------

// Flexbox settings mixins ----- purpose is to flex direction on .grid__row

@mixin flexy($col-row) {
  display: flex;
  flex-direction: $col-row;
  justify-content: space-between;
  @include mq("med") {
    align-items: center;
  }
}

// Media queire mixins ----- Check _variables.scss for breakpoint map -----
// $break should be filled out as a string value from the $breakpoints table found in _variables.scss -----

@mixin mq($break) {
  $value: map-get($breakpoints, $break);

  @media (min-width: $value) {
    @content;
  }
}

// Button Mixin -----

@mixin btn($bc) {
  color: $white;
  display: inline-block;
  font-weight: bold;
  text-decoration: none;
  text-transform: uppercase;
  padding: 0.75em 1.5em;
  border: none;
  background-color: $bc;
  width: 95%;
  margin: 0 auto;
  align-self: center;
  border-radius: $brd-rad;
  margin-bottom: 1.2em;
  @include mq("med") {
    margin-left: 20px;
    margin-right: 20px;
  }
}

// GRID LAYOUT MIXINS ----- includes grid system mixin for grid styling, and function that creates each node in rows

@mixin grid($bc) {
  background-color: $bc;
  margin-left: 0.4em;
  margin-right: 0.4em;
  padding: 0.75em 1.5em;
  border-radius: $brd-rad;
  margin-bottom: 0.5em;
}

@for $i from 1 through 12 {
  .grid__col--#{$i}.theme__colors {
    @if ($i == 12) {
      @include grid($gcb12);
    } @else if ($i == 6) {
      @include grid($gcb6);
    } @else if ($i == 4) {
      @include grid($gcb4);
    } @else if ($i == 3) {
      @include grid($gcb3);
    } @else if ($i == 5) {
      @include grid($gcb5);
    } @else if ($i == 7) {
      @include grid($gcb7);
    } @else if ($i == 8) {
      @include grid($gcb8);
    }
  }
}

@mixin g-columns {
  @for $i from 1 through $g-col-count {
    $context: g-context($g-col-width, $g-col-count, $g-gutter-width) !global;
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));
    // Generate column modifier classes
    &--#{$i} {
      flex-basis: percentage($target / $context);
    }
  }
}
